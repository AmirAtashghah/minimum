from django.db import models
from django.contrib.auth.models import User

class UserProfile(models.Model):
    USER_ROLES = [
        ('reader', 'Reader'),
        ('writer', 'Writer'),
        ('admin', 'Admin'),
    ]

    user = models.OneToOneField(User, on_delete=models.CASCADE)
    role = models.CharField(max_length=10, choices=USER_ROLES, default='reader')
    profile_picture = models.ImageField(upload_to='profile_pics/', null=True, blank=True)
    biography = models.TextField(null=True, blank=True)
    twitter_url = models.URLField(null=True, blank=True)
    facebook_url = models.URLField(null=True, blank=True)
    email_subscription = models.BooleanField(default=False)
    location = models.CharField(max_length=100, null=True, blank=True)
    interests = models.ManyToManyField('Interest')

class Interest(models.Model):
    name = models.CharField(max_length=50, unique=True)

class BlogPost(models.Model):
    PUBLISH_STATUS_CHOICES = [
        ('draft', 'Draft'),
        ('published', 'Published'),
        ('pending_approval', 'Pending Approval'),
    ]

    title = models.CharField(max_length=200)
    content = models.TextField()
    author = models.ForeignKey(User, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    status = models.CharField(max_length=20, choices=PUBLISH_STATUS_CHOICES, default='draft')
    tags = models.ManyToManyField('Tag')
    comments = models.ManyToManyField('Comment')
    likes = models.ManyToManyField(User, through='Like')
    is_featured = models.BooleanField(default=False)
    read_time_minutes = models.PositiveIntegerField()
    related_posts = models.ManyToManyField('BlogPost', related_name='related_posts', blank=True)
    image = models.ImageField(upload_to='blog_images/', null=True, blank=True)

class Tag(models.Model):
    name = models.CharField(max_length=50, unique=True)

class Comment(models.Model):
    blog_post = models.ForeignKey(BlogPost, on_delete=models.CASCADE)
    author = models.ForeignKey(User, on_delete=models.CASCADE)
    content = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

class Like(models.Model):
    blog_post = models.ForeignKey(BlogPost, on_delete=models.CASCADE)
    user = models.ForeignKey(User, on_delete=models.CASCADE)

    class Meta:
        unique_together = ('blog_post', 'user')

